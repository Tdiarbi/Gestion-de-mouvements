'------------------------------------------------------------------------------
' <auto-generated>
'     Ce code a été généré par un outil.
'     Version du runtime :2.0.50727.9151
'
'     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
'     le code est régénéré.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("RHDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class RHDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableAdm As AdmDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Adm")) Is Nothing) Then
                MyBase.Tables.Add(New AdmDataTable(ds.Tables("Adm")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Adm() As AdmDataTable
        Get
            Return Me.tableAdm
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As RHDataSet = CType(MyBase.Clone,RHDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("Adm")) Is Nothing) Then
                MyBase.Tables.Add(New AdmDataTable(ds.Tables("Adm")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableAdm = CType(MyBase.Tables("Adm"),AdmDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAdm) Is Nothing) Then
                Me.tableAdm.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "RHDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/RHDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableAdm = New AdmDataTable
        MyBase.Tables.Add(Me.tableAdm)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeAdm() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As RHDataSet = New RHDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub AdmRowChangeEventHandler(ByVal sender As Object, ByVal e As AdmRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AdmDataTable
        Inherits Global.System.Data.TypedTableBase(Of AdmRow)
        
        Private columnMATRICULE As Global.System.Data.DataColumn
        
        Private columnCODE_STRUC As Global.System.Data.DataColumn
        
        Private columnNOM As Global.System.Data.DataColumn
        
        Private columnPRENOM As Global.System.Data.DataColumn
        
        Private columnDATE_NAIS As Global.System.Data.DataColumn
        
        Private columnRESIDENCE As Global.System.Data.DataColumn
        
        Private columnSIT_FAM As Global.System.Data.DataColumn
        
        Private columnNB_ENF As Global.System.Data.DataColumn
        
        Private columnFONCT_ORG As Global.System.Data.DataColumn
        
        Private columnFONCT_REEL As Global.System.Data.DataColumn
        
        Private columnECHELLE As Global.System.Data.DataColumn
        
        Private columnPROD As Global.System.Data.DataColumn
        
        Private columnEXPSOMIZ As Global.System.Data.DataColumn
        
        Private columnDATE_ENT As Global.System.Data.DataColumn
        
        Private columnDATE_DEMO As Global.System.Data.DataColumn
        
        Private columnNUM_CONT As Global.System.Data.DataColumn
        
        Private columnOBSERV As Global.System.Data.DataColumn
        
        Private columnSTRUCTURE As Global.System.Data.DataColumn
        
        Private columnST_AFFECT As Global.System.Data.DataColumn
        
        Private columnDATE_FCHAN As Global.System.Data.DataColumn
        
        Private columnORGANIQUE As Global.System.Data.DataColumn
        
        Private columnADRESSE As Global.System.Data.DataColumn
        
        Private columnEXPSECTEUR As Global.System.Data.DataColumn
        
        Private columnEXPHORSECT As Global.System.Data.DataColumn
        
        Private columnNOM_J_F As Global.System.Data.DataColumn
        
        Private columnSIT_Serv_National As Global.System.Data.DataColumn
        
        Private columnPRENOM_PERE As Global.System.Data.DataColumn
        
        Private columnNOM_MERE As Global.System.Data.DataColumn
        
        Private columnPRENOM_MERE As Global.System.Data.DataColumn
        
        Private columnNIVEAU_SCOLAIRE As Global.System.Data.DataColumn
        
        Private columnNUM_CNI As Global.System.Data.DataColumn
        
        Private columnDAT_DELIVRE As Global.System.Data.DataColumn
        
        Private columnCode_Banque As Global.System.Data.DataColumn
        
        Private columnN_Compte As Global.System.Data.DataColumn
        
        Private columnSalaire_Unique As Global.System.Data.DataColumn
        
        Private columnCode_Fonction As Global.System.Data.DataColumn
        
        Private columnNum_Tel As Global.System.Data.DataColumn
        
        Private columnNationalite As Global.System.Data.DataColumn
        
        Private columnSexe As Global.System.Data.DataColumn
        
        Private columnValidation_recrut As Global.System.Data.DataColumn
        
        Private columnValidation_Adm As Global.System.Data.DataColumn
        
        Private columnCat As Global.System.Data.DataColumn
        
        Private columnPhoto As Global.System.Data.DataColumn
        
        Private columnCommune As Global.System.Data.DataColumn
        
        Private columnWilaya As Global.System.Data.DataColumn
        
        Private columnLieu_naissance As Global.System.Data.DataColumn
        
        Private columnDaira As Global.System.Data.DataColumn
        
        Private _columnN__SS As Global.System.Data.DataColumn
        
        Private _columnN__OS As Global.System.Data.DataColumn
        
        Private columnGroupe_Sanguin As Global.System.Data.DataColumn
        
        Private columnCaisseSS As Global.System.Data.DataColumn
        
        Private columnActif As Global.System.Data.DataColumn
        
        Private columnPointage_Direction As Global.System.Data.DataColumn
        
        Private columnStructure_Pointage As Global.System.Data.DataColumn
        
        Private columnTravail_Poste As Global.System.Data.DataColumn
        
        Private columnUser_Valid_Rec As Global.System.Data.DataColumn
        
        Private columnDate_Valid_Rec As Global.System.Data.DataColumn
        
        Private columnUser_Valid_Adm As Global.System.Data.DataColumn
        
        Private columnDate_Valid_Adm As Global.System.Data.DataColumn
        
        Private columnValideur_Rec As Global.System.Data.DataColumn
        
        Private columnDate_Devalid_Rec As Global.System.Data.DataColumn
        
        Private columnValideur_Adm As Global.System.Data.DataColumn
        
        Private columnDate_Devalid_Adm As Global.System.Data.DataColumn
        
        Private columnFONCT_REEL_Anc As Global.System.Data.DataColumn
        
        Private columnECHELLE_Anc As Global.System.Data.DataColumn
        
        Private columnCode_Fonction_Anc As Global.System.Data.DataColumn
        
        Private columnModifie As Global.System.Data.DataColumn
        
        Private columnCODE_STRUC_ANC As Global.System.Data.DataColumn
        
        Private columnSTRUCTURE_ANC As Global.System.Data.DataColumn
        
        Private columnModifie1 As Global.System.Data.DataColumn
        
        Private columnECHELON As Global.System.Data.DataColumn
        
        Private columnNOTE_PRI As Global.System.Data.DataColumn
        
        Private columnNOTE_PRC As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Adm"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MATRICULEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATRICULE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODE_STRUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODE_STRUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRENOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRENOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DATE_NAISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_NAIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RESIDENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESIDENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SIT_FAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIT_FAM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NB_ENFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNB_ENF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FONCT_ORGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFONCT_ORG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FONCT_REELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFONCT_REEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ECHELLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnECHELLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EXPSOMIZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXPSOMIZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DATE_ENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_ENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DATE_DEMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_DEMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NUM_CONTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUM_CONT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OBSERVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property STRUCTUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTRUCTURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ST_AFFECTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnST_AFFECT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DATE_FCHANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_FCHAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ORGANIQUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORGANIQUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADRESSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADRESSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EXPSECTEURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXPSECTEUR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EXPHORSECTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXPHORSECT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOM_J_FColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOM_J_F
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SIT_Serv_NationalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIT_Serv_National
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRENOM_PEREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRENOM_PERE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOM_MEREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOM_MERE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRENOM_MEREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRENOM_MERE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NIVEAU_SCOLAIREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVEAU_SCOLAIRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NUM_CNIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUM_CNI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DAT_DELIVREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAT_DELIVRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Code_BanqueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_Banque
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_CompteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Compte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Salaire_UniqueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalaire_Unique
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Code_FonctionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_Fonction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Num_TelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNum_Tel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NationaliteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNationalite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SexeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSexe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Validation_recrutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidation_recrut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Validation_AdmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidation_Adm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PhotoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhoto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CommuneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCommune
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WilayaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWilaya
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Lieu_naissanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLieu_naissance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DairaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDaira
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _N__SSColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnN__SS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _N__OSColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnN__OS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Groupe_SanguinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroupe_Sanguin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CaisseSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaisseSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ActifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Pointage_DirectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPointage_Direction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Structure_PointageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStructure_Pointage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Travail_PosteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTravail_Poste
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property User_Valid_RecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUser_Valid_Rec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Date_Valid_RecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Valid_Rec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property User_Valid_AdmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUser_Valid_Adm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Date_Valid_AdmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Valid_Adm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Valideur_RecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValideur_Rec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Date_Devalid_RecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Devalid_Rec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Valideur_AdmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValideur_Adm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Date_Devalid_AdmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Devalid_Adm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FONCT_REEL_AncColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFONCT_REEL_Anc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ECHELLE_AncColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnECHELLE_Anc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Code_Fonction_AncColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_Fonction_Anc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ModifieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModifie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODE_STRUC_ANCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODE_STRUC_ANC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property STRUCTURE_ANCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTRUCTURE_ANC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Modifie1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnModifie1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ECHELONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnECHELON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOTE_PRIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTE_PRI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOTE_PRCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTE_PRC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AdmRow
            Get
                Return CType(Me.Rows(index),AdmRow)
            End Get
        End Property
        
        Public Event AdmRowChanging As AdmRowChangeEventHandler
        
        Public Event AdmRowChanged As AdmRowChangeEventHandler
        
        Public Event AdmRowDeleting As AdmRowChangeEventHandler
        
        Public Event AdmRowDeleted As AdmRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddAdmRow(ByVal row As AdmRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddAdmRow( _
                    ByVal MATRICULE As String,  _
                    ByVal CODE_STRUC As String,  _
                    ByVal NOM As String,  _
                    ByVal PRENOM As String,  _
                    ByVal DATE_NAIS As Date,  _
                    ByVal RESIDENCE As String,  _
                    ByVal SIT_FAM As String,  _
                    ByVal NB_ENF As Integer,  _
                    ByVal FONCT_ORG As String,  _
                    ByVal FONCT_REEL As String,  _
                    ByVal ECHELLE As String,  _
                    ByVal PROD As Integer,  _
                    ByVal EXPSOMIZ As Integer,  _
                    ByVal DATE_ENT As Date,  _
                    ByVal DATE_DEMO As Date,  _
                    ByVal NUM_CONT As String,  _
                    ByVal OBSERV As String,  _
                    ByVal _STRUCTURE As String,  _
                    ByVal ST_AFFECT As String,  _
                    ByVal DATE_FCHAN As Date,  _
                    ByVal ORGANIQUE As String,  _
                    ByVal ADRESSE As String,  _
                    ByVal EXPSECTEUR As Integer,  _
                    ByVal EXPHORSECT As Integer,  _
                    ByVal NOM_J_F As String,  _
                    ByVal SIT_Serv_National As String,  _
                    ByVal PRENOM_PERE As String,  _
                    ByVal NOM_MERE As String,  _
                    ByVal PRENOM_MERE As String,  _
                    ByVal NIVEAU_SCOLAIRE As String,  _
                    ByVal NUM_CNI As String,  _
                    ByVal DAT_DELIVRE As Date,  _
                    ByVal Code_Banque As String,  _
                    ByVal N_Compte As String,  _
                    ByVal Salaire_Unique As Boolean,  _
                    ByVal Code_Fonction As String,  _
                    ByVal Num_Tel As String,  _
                    ByVal Nationalite As String,  _
                    ByVal Sexe As String,  _
                    ByVal Validation_recrut As Boolean,  _
                    ByVal Validation_Adm As Boolean,  _
                    ByVal Cat As String,  _
                    ByVal Photo() As Byte,  _
                    ByVal Commune As String,  _
                    ByVal Wilaya As String,  _
                    ByVal Lieu_naissance As String,  _
                    ByVal Daira As String,  _
                    ByVal _N__SS As String,  _
                    ByVal _N__OS As String,  _
                    ByVal Groupe_Sanguin As String,  _
                    ByVal CaisseSS As String,  _
                    ByVal Actif As String,  _
                    ByVal Pointage_Direction As Boolean,  _
                    ByVal Structure_Pointage As String,  _
                    ByVal Travail_Poste As Boolean,  _
                    ByVal User_Valid_Rec As String,  _
                    ByVal Date_Valid_Rec As Date,  _
                    ByVal User_Valid_Adm As String,  _
                    ByVal Date_Valid_Adm As Date,  _
                    ByVal Valideur_Rec As String,  _
                    ByVal Date_Devalid_Rec As Date,  _
                    ByVal Valideur_Adm As String,  _
                    ByVal Date_Devalid_Adm As Date,  _
                    ByVal FONCT_REEL_Anc As String,  _
                    ByVal ECHELLE_Anc As String,  _
                    ByVal Code_Fonction_Anc As String,  _
                    ByVal Modifie As String,  _
                    ByVal CODE_STRUC_ANC As String,  _
                    ByVal STRUCTURE_ANC As String,  _
                    ByVal Modifie1 As String,  _
                    ByVal ECHELON As Integer,  _
                    ByVal NOTE_PRI As Decimal,  _
                    ByVal NOTE_PRC As Decimal) As AdmRow
            Dim rowAdmRow As AdmRow = CType(Me.NewRow,AdmRow)
            Dim columnValuesArray() As Object = New Object() {MATRICULE, CODE_STRUC, NOM, PRENOM, DATE_NAIS, RESIDENCE, SIT_FAM, NB_ENF, FONCT_ORG, FONCT_REEL, ECHELLE, PROD, EXPSOMIZ, DATE_ENT, DATE_DEMO, NUM_CONT, OBSERV, _STRUCTURE, ST_AFFECT, DATE_FCHAN, ORGANIQUE, ADRESSE, EXPSECTEUR, EXPHORSECT, NOM_J_F, SIT_Serv_National, PRENOM_PERE, NOM_MERE, PRENOM_MERE, NIVEAU_SCOLAIRE, NUM_CNI, DAT_DELIVRE, Code_Banque, N_Compte, Salaire_Unique, Code_Fonction, Num_Tel, Nationalite, Sexe, Validation_recrut, Validation_Adm, Cat, Photo, Commune, Wilaya, Lieu_naissance, Daira, _N__SS, _N__OS, Groupe_Sanguin, CaisseSS, Actif, Pointage_Direction, Structure_Pointage, Travail_Poste, User_Valid_Rec, Date_Valid_Rec, User_Valid_Adm, Date_Valid_Adm, Valideur_Rec, Date_Devalid_Rec, Valideur_Adm, Date_Devalid_Adm, FONCT_REEL_Anc, ECHELLE_Anc, Code_Fonction_Anc, Modifie, CODE_STRUC_ANC, STRUCTURE_ANC, Modifie1, ECHELON, NOTE_PRI, NOTE_PRC}
            rowAdmRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAdmRow)
            Return rowAdmRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AdmDataTable = CType(MyBase.Clone,AdmDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AdmDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnMATRICULE = MyBase.Columns("MATRICULE")
            Me.columnCODE_STRUC = MyBase.Columns("CODE_STRUC")
            Me.columnNOM = MyBase.Columns("NOM")
            Me.columnPRENOM = MyBase.Columns("PRENOM")
            Me.columnDATE_NAIS = MyBase.Columns("DATE_NAIS")
            Me.columnRESIDENCE = MyBase.Columns("RESIDENCE")
            Me.columnSIT_FAM = MyBase.Columns("SIT_FAM")
            Me.columnNB_ENF = MyBase.Columns("NB_ENF")
            Me.columnFONCT_ORG = MyBase.Columns("FONCT_ORG")
            Me.columnFONCT_REEL = MyBase.Columns("FONCT_REEL")
            Me.columnECHELLE = MyBase.Columns("ECHELLE")
            Me.columnPROD = MyBase.Columns("PROD")
            Me.columnEXPSOMIZ = MyBase.Columns("EXPSOMIZ")
            Me.columnDATE_ENT = MyBase.Columns("DATE_ENT")
            Me.columnDATE_DEMO = MyBase.Columns("DATE_DEMO")
            Me.columnNUM_CONT = MyBase.Columns("NUM_CONT")
            Me.columnOBSERV = MyBase.Columns("OBSERV")
            Me.columnSTRUCTURE = MyBase.Columns("STRUCTURE")
            Me.columnST_AFFECT = MyBase.Columns("ST_AFFECT")
            Me.columnDATE_FCHAN = MyBase.Columns("DATE_FCHAN")
            Me.columnORGANIQUE = MyBase.Columns("ORGANIQUE")
            Me.columnADRESSE = MyBase.Columns("ADRESSE")
            Me.columnEXPSECTEUR = MyBase.Columns("EXPSECTEUR")
            Me.columnEXPHORSECT = MyBase.Columns("EXPHORSECT")
            Me.columnNOM_J_F = MyBase.Columns("NOM_J_F")
            Me.columnSIT_Serv_National = MyBase.Columns("SIT_Serv_National")
            Me.columnPRENOM_PERE = MyBase.Columns("PRENOM_PERE")
            Me.columnNOM_MERE = MyBase.Columns("NOM_MERE")
            Me.columnPRENOM_MERE = MyBase.Columns("PRENOM_MERE")
            Me.columnNIVEAU_SCOLAIRE = MyBase.Columns("NIVEAU SCOLAIRE")
            Me.columnNUM_CNI = MyBase.Columns("NUM_CNI")
            Me.columnDAT_DELIVRE = MyBase.Columns("DAT_DELIVRE")
            Me.columnCode_Banque = MyBase.Columns("Code Banque")
            Me.columnN_Compte = MyBase.Columns("N Compte")
            Me.columnSalaire_Unique = MyBase.Columns("Salaire Unique")
            Me.columnCode_Fonction = MyBase.Columns("Code Fonction")
            Me.columnNum_Tel = MyBase.Columns("Num Tel")
            Me.columnNationalite = MyBase.Columns("Nationalite")
            Me.columnSexe = MyBase.Columns("Sexe")
            Me.columnValidation_recrut = MyBase.Columns("Validation recrut")
            Me.columnValidation_Adm = MyBase.Columns("Validation Adm")
            Me.columnCat = MyBase.Columns("Cat")
            Me.columnPhoto = MyBase.Columns("Photo")
            Me.columnCommune = MyBase.Columns("Commune")
            Me.columnWilaya = MyBase.Columns("Wilaya")
            Me.columnLieu_naissance = MyBase.Columns("Lieu naissance")
            Me.columnDaira = MyBase.Columns("Daira")
            Me._columnN__SS = MyBase.Columns("N° SS")
            Me._columnN__OS = MyBase.Columns("N° OS")
            Me.columnGroupe_Sanguin = MyBase.Columns("Groupe_Sanguin")
            Me.columnCaisseSS = MyBase.Columns("CaisseSS")
            Me.columnActif = MyBase.Columns("Actif")
            Me.columnPointage_Direction = MyBase.Columns("Pointage_Direction")
            Me.columnStructure_Pointage = MyBase.Columns("Structure_Pointage")
            Me.columnTravail_Poste = MyBase.Columns("Travail_Poste")
            Me.columnUser_Valid_Rec = MyBase.Columns("User_Valid_Rec")
            Me.columnDate_Valid_Rec = MyBase.Columns("Date_Valid_Rec")
            Me.columnUser_Valid_Adm = MyBase.Columns("User_Valid_Adm")
            Me.columnDate_Valid_Adm = MyBase.Columns("Date_Valid_Adm")
            Me.columnValideur_Rec = MyBase.Columns("Valideur_Rec")
            Me.columnDate_Devalid_Rec = MyBase.Columns("Date_Devalid_Rec")
            Me.columnValideur_Adm = MyBase.Columns("Valideur_Adm")
            Me.columnDate_Devalid_Adm = MyBase.Columns("Date_Devalid_Adm")
            Me.columnFONCT_REEL_Anc = MyBase.Columns("FONCT_REEL_Anc")
            Me.columnECHELLE_Anc = MyBase.Columns("ECHELLE_Anc")
            Me.columnCode_Fonction_Anc = MyBase.Columns("Code Fonction_Anc")
            Me.columnModifie = MyBase.Columns("Modifie")
            Me.columnCODE_STRUC_ANC = MyBase.Columns("CODE_STRUC_ANC")
            Me.columnSTRUCTURE_ANC = MyBase.Columns("STRUCTURE_ANC")
            Me.columnModifie1 = MyBase.Columns("Modifie1")
            Me.columnECHELON = MyBase.Columns("ECHELON")
            Me.columnNOTE_PRI = MyBase.Columns("NOTE_PRI")
            Me.columnNOTE_PRC = MyBase.Columns("NOTE_PRC")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnMATRICULE = New Global.System.Data.DataColumn("MATRICULE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATRICULE)
            Me.columnCODE_STRUC = New Global.System.Data.DataColumn("CODE_STRUC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODE_STRUC)
            Me.columnNOM = New Global.System.Data.DataColumn("NOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOM)
            Me.columnPRENOM = New Global.System.Data.DataColumn("PRENOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRENOM)
            Me.columnDATE_NAIS = New Global.System.Data.DataColumn("DATE_NAIS", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_NAIS)
            Me.columnRESIDENCE = New Global.System.Data.DataColumn("RESIDENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESIDENCE)
            Me.columnSIT_FAM = New Global.System.Data.DataColumn("SIT_FAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIT_FAM)
            Me.columnNB_ENF = New Global.System.Data.DataColumn("NB_ENF", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNB_ENF)
            Me.columnFONCT_ORG = New Global.System.Data.DataColumn("FONCT_ORG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFONCT_ORG)
            Me.columnFONCT_REEL = New Global.System.Data.DataColumn("FONCT_REEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFONCT_REEL)
            Me.columnECHELLE = New Global.System.Data.DataColumn("ECHELLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnECHELLE)
            Me.columnPROD = New Global.System.Data.DataColumn("PROD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROD)
            Me.columnEXPSOMIZ = New Global.System.Data.DataColumn("EXPSOMIZ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXPSOMIZ)
            Me.columnDATE_ENT = New Global.System.Data.DataColumn("DATE_ENT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_ENT)
            Me.columnDATE_DEMO = New Global.System.Data.DataColumn("DATE_DEMO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_DEMO)
            Me.columnNUM_CONT = New Global.System.Data.DataColumn("NUM_CONT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUM_CONT)
            Me.columnOBSERV = New Global.System.Data.DataColumn("OBSERV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERV)
            Me.columnSTRUCTURE = New Global.System.Data.DataColumn("STRUCTURE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnSTRUCTURE.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "STRUCTUREColumn")
            Me.columnSTRUCTURE.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSTRUCTURE")
            Me.columnSTRUCTURE.ExtendedProperties.Add("Generator_UserColumnName", "STRUCTURE")
            MyBase.Columns.Add(Me.columnSTRUCTURE)
            Me.columnST_AFFECT = New Global.System.Data.DataColumn("ST_AFFECT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnST_AFFECT)
            Me.columnDATE_FCHAN = New Global.System.Data.DataColumn("DATE_FCHAN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_FCHAN)
            Me.columnORGANIQUE = New Global.System.Data.DataColumn("ORGANIQUE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORGANIQUE)
            Me.columnADRESSE = New Global.System.Data.DataColumn("ADRESSE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADRESSE)
            Me.columnEXPSECTEUR = New Global.System.Data.DataColumn("EXPSECTEUR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXPSECTEUR)
            Me.columnEXPHORSECT = New Global.System.Data.DataColumn("EXPHORSECT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXPHORSECT)
            Me.columnNOM_J_F = New Global.System.Data.DataColumn("NOM_J_F", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOM_J_F)
            Me.columnSIT_Serv_National = New Global.System.Data.DataColumn("SIT_Serv_National", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIT_Serv_National)
            Me.columnPRENOM_PERE = New Global.System.Data.DataColumn("PRENOM_PERE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRENOM_PERE)
            Me.columnNOM_MERE = New Global.System.Data.DataColumn("NOM_MERE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOM_MERE)
            Me.columnPRENOM_MERE = New Global.System.Data.DataColumn("PRENOM_MERE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRENOM_MERE)
            Me.columnNIVEAU_SCOLAIRE = New Global.System.Data.DataColumn("NIVEAU SCOLAIRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVEAU_SCOLAIRE)
            Me.columnNUM_CNI = New Global.System.Data.DataColumn("NUM_CNI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUM_CNI)
            Me.columnDAT_DELIVRE = New Global.System.Data.DataColumn("DAT_DELIVRE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAT_DELIVRE)
            Me.columnCode_Banque = New Global.System.Data.DataColumn("Code Banque", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_Banque)
            Me.columnN_Compte = New Global.System.Data.DataColumn("N Compte", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Compte)
            Me.columnSalaire_Unique = New Global.System.Data.DataColumn("Salaire Unique", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalaire_Unique)
            Me.columnCode_Fonction = New Global.System.Data.DataColumn("Code Fonction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_Fonction)
            Me.columnNum_Tel = New Global.System.Data.DataColumn("Num Tel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNum_Tel)
            Me.columnNationalite = New Global.System.Data.DataColumn("Nationalite", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNationalite)
            Me.columnSexe = New Global.System.Data.DataColumn("Sexe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSexe)
            Me.columnValidation_recrut = New Global.System.Data.DataColumn("Validation recrut", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidation_recrut)
            Me.columnValidation_Adm = New Global.System.Data.DataColumn("Validation Adm", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidation_Adm)
            Me.columnCat = New Global.System.Data.DataColumn("Cat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCat)
            Me.columnPhoto = New Global.System.Data.DataColumn("Photo", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhoto)
            Me.columnCommune = New Global.System.Data.DataColumn("Commune", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCommune)
            Me.columnWilaya = New Global.System.Data.DataColumn("Wilaya", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWilaya)
            Me.columnLieu_naissance = New Global.System.Data.DataColumn("Lieu naissance", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLieu_naissance)
            Me.columnDaira = New Global.System.Data.DataColumn("Daira", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDaira)
            Me._columnN__SS = New Global.System.Data.DataColumn("N° SS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnN__SS.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnN__SS")
            Me._columnN__SS.ExtendedProperties.Add("Generator_UserColumnName", "N° SS")
            MyBase.Columns.Add(Me._columnN__SS)
            Me._columnN__OS = New Global.System.Data.DataColumn("N° OS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnN__OS.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnN__OS")
            Me._columnN__OS.ExtendedProperties.Add("Generator_UserColumnName", "N° OS")
            MyBase.Columns.Add(Me._columnN__OS)
            Me.columnGroupe_Sanguin = New Global.System.Data.DataColumn("Groupe_Sanguin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroupe_Sanguin)
            Me.columnCaisseSS = New Global.System.Data.DataColumn("CaisseSS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaisseSS)
            Me.columnActif = New Global.System.Data.DataColumn("Actif", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActif)
            Me.columnPointage_Direction = New Global.System.Data.DataColumn("Pointage_Direction", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPointage_Direction)
            Me.columnStructure_Pointage = New Global.System.Data.DataColumn("Structure_Pointage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStructure_Pointage)
            Me.columnTravail_Poste = New Global.System.Data.DataColumn("Travail_Poste", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTravail_Poste)
            Me.columnUser_Valid_Rec = New Global.System.Data.DataColumn("User_Valid_Rec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUser_Valid_Rec)
            Me.columnDate_Valid_Rec = New Global.System.Data.DataColumn("Date_Valid_Rec", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Valid_Rec)
            Me.columnUser_Valid_Adm = New Global.System.Data.DataColumn("User_Valid_Adm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUser_Valid_Adm)
            Me.columnDate_Valid_Adm = New Global.System.Data.DataColumn("Date_Valid_Adm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Valid_Adm)
            Me.columnValideur_Rec = New Global.System.Data.DataColumn("Valideur_Rec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValideur_Rec)
            Me.columnDate_Devalid_Rec = New Global.System.Data.DataColumn("Date_Devalid_Rec", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Devalid_Rec)
            Me.columnValideur_Adm = New Global.System.Data.DataColumn("Valideur_Adm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValideur_Adm)
            Me.columnDate_Devalid_Adm = New Global.System.Data.DataColumn("Date_Devalid_Adm", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Devalid_Adm)
            Me.columnFONCT_REEL_Anc = New Global.System.Data.DataColumn("FONCT_REEL_Anc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFONCT_REEL_Anc)
            Me.columnECHELLE_Anc = New Global.System.Data.DataColumn("ECHELLE_Anc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnECHELLE_Anc)
            Me.columnCode_Fonction_Anc = New Global.System.Data.DataColumn("Code Fonction_Anc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_Fonction_Anc)
            Me.columnModifie = New Global.System.Data.DataColumn("Modifie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModifie)
            Me.columnCODE_STRUC_ANC = New Global.System.Data.DataColumn("CODE_STRUC_ANC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODE_STRUC_ANC)
            Me.columnSTRUCTURE_ANC = New Global.System.Data.DataColumn("STRUCTURE_ANC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTRUCTURE_ANC)
            Me.columnModifie1 = New Global.System.Data.DataColumn("Modifie1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModifie1)
            Me.columnECHELON = New Global.System.Data.DataColumn("ECHELON", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnECHELON)
            Me.columnNOTE_PRI = New Global.System.Data.DataColumn("NOTE_PRI", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTE_PRI)
            Me.columnNOTE_PRC = New Global.System.Data.DataColumn("NOTE_PRC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTE_PRC)
            Me.columnMATRICULE.AllowDBNull = false
            Me.columnMATRICULE.MaxLength = 6
            Me.columnCODE_STRUC.MaxLength = 7
            Me.columnNOM.MaxLength = 50
            Me.columnPRENOM.MaxLength = 50
            Me.columnRESIDENCE.MaxLength = 30
            Me.columnSIT_FAM.MaxLength = 1
            Me.columnFONCT_ORG.MaxLength = 100
            Me.columnFONCT_REEL.MaxLength = 100
            Me.columnECHELLE.MaxLength = 3
            Me.columnNUM_CONT.MaxLength = 6
            Me.columnOBSERV.MaxLength = 150
            Me.columnSTRUCTURE.MaxLength = 10
            Me.columnST_AFFECT.MaxLength = 100
            Me.columnORGANIQUE.MaxLength = 1
            Me.columnADRESSE.MaxLength = 100
            Me.columnNOM_J_F.MaxLength = 50
            Me.columnSIT_Serv_National.MaxLength = 50
            Me.columnPRENOM_PERE.MaxLength = 50
            Me.columnNOM_MERE.MaxLength = 50
            Me.columnPRENOM_MERE.MaxLength = 50
            Me.columnNIVEAU_SCOLAIRE.MaxLength = 30
            Me.columnNUM_CNI.MaxLength = 12
            Me.columnCode_Banque.MaxLength = 10
            Me.columnN_Compte.MaxLength = 25
            Me.columnSalaire_Unique.AllowDBNull = false
            Me.columnCode_Fonction.MaxLength = 7
            Me.columnNum_Tel.MaxLength = 12
            Me.columnNationalite.MaxLength = 15
            Me.columnSexe.MaxLength = 1
            Me.columnCat.MaxLength = 1
            Me.columnCommune.MaxLength = 30
            Me.columnWilaya.MaxLength = 30
            Me.columnLieu_naissance.MaxLength = 30
            Me.columnDaira.MaxLength = 30
            Me._columnN__SS.MaxLength = 15
            Me._columnN__OS.MaxLength = 20
            Me.columnGroupe_Sanguin.MaxLength = 3
            Me.columnCaisseSS.MaxLength = 10
            Me.columnActif.MaxLength = 1
            Me.columnPointage_Direction.AllowDBNull = false
            Me.columnStructure_Pointage.MaxLength = 7
            Me.columnTravail_Poste.AllowDBNull = false
            Me.columnUser_Valid_Rec.MaxLength = 14
            Me.columnUser_Valid_Adm.MaxLength = 14
            Me.columnValideur_Rec.MaxLength = 14
            Me.columnValideur_Adm.MaxLength = 14
            Me.columnFONCT_REEL_Anc.MaxLength = 100
            Me.columnECHELLE_Anc.MaxLength = 3
            Me.columnCode_Fonction_Anc.MaxLength = 7
            Me.columnModifie.MaxLength = 1
            Me.columnCODE_STRUC_ANC.MaxLength = 7
            Me.columnSTRUCTURE_ANC.MaxLength = 10
            Me.columnModifie1.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewAdmRow() As AdmRow
            Return CType(Me.NewRow,AdmRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AdmRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AdmRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AdmRowChangedEvent) Is Nothing) Then
                RaiseEvent AdmRowChanged(Me, New AdmRowChangeEvent(CType(e.Row,AdmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AdmRowChangingEvent) Is Nothing) Then
                RaiseEvent AdmRowChanging(Me, New AdmRowChangeEvent(CType(e.Row,AdmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AdmRowDeletedEvent) Is Nothing) Then
                RaiseEvent AdmRowDeleted(Me, New AdmRowChangeEvent(CType(e.Row,AdmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AdmRowDeletingEvent) Is Nothing) Then
                RaiseEvent AdmRowDeleting(Me, New AdmRowChangeEvent(CType(e.Row,AdmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveAdmRow(ByVal row As AdmRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As RHDataSet = New RHDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AdmDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class AdmRow
        Inherits Global.System.Data.DataRow
        
        Private tableAdm As AdmDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAdm = CType(Me.Table,AdmDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MATRICULE() As String
            Get
                Return CType(Me(Me.tableAdm.MATRICULEColumn),String)
            End Get
            Set
                Me(Me.tableAdm.MATRICULEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODE_STRUC() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.CODE_STRUCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CODE_STRUC' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.CODE_STRUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOM() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.NOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'NOM' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.NOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRENOM() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.PRENOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'PRENOM' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.PRENOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DATE_NAIS() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAdm.DATE_NAISColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'DATE_NAIS' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.DATE_NAISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RESIDENCE() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.RESIDENCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'RESIDENCE' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.RESIDENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SIT_FAM() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.SIT_FAMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'SIT_FAM' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.SIT_FAMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NB_ENF() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAdm.NB_ENFColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'NB_ENF' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.NB_ENFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FONCT_ORG() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.FONCT_ORGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FONCT_ORG' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.FONCT_ORGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FONCT_REEL() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.FONCT_REELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FONCT_REEL' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.FONCT_REELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ECHELLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.ECHELLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'ECHELLE' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.ECHELLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROD() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAdm.PRODColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'PROD' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.PRODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EXPSOMIZ() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAdm.EXPSOMIZColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'EXPSOMIZ' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.EXPSOMIZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DATE_ENT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAdm.DATE_ENTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'DATE_ENT' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.DATE_ENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DATE_DEMO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAdm.DATE_DEMOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'DATE_DEMO' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.DATE_DEMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NUM_CONT() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.NUM_CONTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'NUM_CONT' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.NUM_CONTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OBSERV() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.OBSERVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'OBSERV' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.OBSERVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _STRUCTURE() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.STRUCTUREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'STRUCTURE' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.STRUCTUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ST_AFFECT() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.ST_AFFECTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'ST_AFFECT' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.ST_AFFECTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DATE_FCHAN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAdm.DATE_FCHANColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'DATE_FCHAN' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.DATE_FCHANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ORGANIQUE() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.ORGANIQUEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'ORGANIQUE' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.ORGANIQUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADRESSE() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.ADRESSEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'ADRESSE' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.ADRESSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EXPSECTEUR() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAdm.EXPSECTEURColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'EXPSECTEUR' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.EXPSECTEURColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EXPHORSECT() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAdm.EXPHORSECTColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'EXPHORSECT' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.EXPHORSECTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOM_J_F() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.NOM_J_FColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'NOM_J_F' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.NOM_J_FColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SIT_Serv_National() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.SIT_Serv_NationalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'SIT_Serv_National' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.SIT_Serv_NationalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRENOM_PERE() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.PRENOM_PEREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'PRENOM_PERE' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.PRENOM_PEREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOM_MERE() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.NOM_MEREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'NOM_MERE' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.NOM_MEREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRENOM_MERE() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.PRENOM_MEREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'PRENOM_MERE' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.PRENOM_MEREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NIVEAU_SCOLAIRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.NIVEAU_SCOLAIREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'NIVEAU SCOLAIRE' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.NIVEAU_SCOLAIREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NUM_CNI() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.NUM_CNIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'NUM_CNI' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.NUM_CNIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DAT_DELIVRE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAdm.DAT_DELIVREColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'DAT_DELIVRE' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.DAT_DELIVREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code_Banque() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Code_BanqueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Code Banque' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Code_BanqueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Compte() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.N_CompteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'N Compte' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.N_CompteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Salaire_Unique() As Boolean
            Get
                Return CType(Me(Me.tableAdm.Salaire_UniqueColumn),Boolean)
            End Get
            Set
                Me(Me.tableAdm.Salaire_UniqueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code_Fonction() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Code_FonctionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Code Fonction' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Code_FonctionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Num_Tel() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Num_TelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Num Tel' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Num_TelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Nationalite() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.NationaliteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Nationalite' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.NationaliteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sexe() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.SexeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Sexe' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.SexeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Validation_recrut() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Validation_recrutColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Validation recrut' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Validation_recrutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Validation_Adm() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Validation_AdmColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Validation Adm' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Validation_AdmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cat() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.CatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Cat' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.CatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Photo() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableAdm.PhotoColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Photo' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.PhotoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Commune() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.CommuneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Commune' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.CommuneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Wilaya() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.WilayaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Wilaya' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.WilayaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Lieu_naissance() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Lieu_naissanceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Lieu naissance' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Lieu_naissanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Daira() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.DairaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Daira' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.DairaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _N__SS() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm._N__SSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'N° SS' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm._N__SSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _N__OS() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm._N__OSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'N° OS' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm._N__OSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Groupe_Sanguin() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Groupe_SanguinColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Groupe_Sanguin' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Groupe_SanguinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CaisseSS() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.CaisseSSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CaisseSS' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.CaisseSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Actif() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.ActifColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Actif' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.ActifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pointage_Direction() As Boolean
            Get
                Return CType(Me(Me.tableAdm.Pointage_DirectionColumn),Boolean)
            End Get
            Set
                Me(Me.tableAdm.Pointage_DirectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Structure_Pointage() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Structure_PointageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Structure_Pointage' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Structure_PointageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Travail_Poste() As Boolean
            Get
                Return CType(Me(Me.tableAdm.Travail_PosteColumn),Boolean)
            End Get
            Set
                Me(Me.tableAdm.Travail_PosteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property User_Valid_Rec() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.User_Valid_RecColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'User_Valid_Rec' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.User_Valid_RecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Date_Valid_Rec() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Date_Valid_RecColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Date_Valid_Rec' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Date_Valid_RecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property User_Valid_Adm() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.User_Valid_AdmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'User_Valid_Adm' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.User_Valid_AdmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Date_Valid_Adm() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Date_Valid_AdmColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Date_Valid_Adm' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Date_Valid_AdmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Valideur_Rec() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Valideur_RecColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Valideur_Rec' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Valideur_RecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Date_Devalid_Rec() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Date_Devalid_RecColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Date_Devalid_Rec' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Date_Devalid_RecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Valideur_Adm() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Valideur_AdmColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Valideur_Adm' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Valideur_AdmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Date_Devalid_Adm() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Date_Devalid_AdmColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Date_Devalid_Adm' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Date_Devalid_AdmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FONCT_REEL_Anc() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.FONCT_REEL_AncColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'FONCT_REEL_Anc' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.FONCT_REEL_AncColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ECHELLE_Anc() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.ECHELLE_AncColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'ECHELLE_Anc' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.ECHELLE_AncColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code_Fonction_Anc() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Code_Fonction_AncColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Code Fonction_Anc' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Code_Fonction_AncColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Modifie() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.ModifieColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Modifie' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.ModifieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODE_STRUC_ANC() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.CODE_STRUC_ANCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'CODE_STRUC_ANC' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.CODE_STRUC_ANCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property STRUCTURE_ANC() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.STRUCTURE_ANCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'STRUCTURE_ANC' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.STRUCTURE_ANCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Modifie1() As String
            Get
                Try 
                    Return CType(Me(Me.tableAdm.Modifie1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'Modifie1' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.Modifie1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ECHELON() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAdm.ECHELONColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'ECHELON' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.ECHELONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOTE_PRI() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAdm.NOTE_PRIColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'NOTE_PRI' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.NOTE_PRIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOTE_PRC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAdm.NOTE_PRCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("La valeur pour la colonne 'NOTE_PRC' dans la table 'Adm' est DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAdm.NOTE_PRCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODE_STRUCNull() As Boolean
            Return Me.IsNull(Me.tableAdm.CODE_STRUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODE_STRUCNull()
            Me(Me.tableAdm.CODE_STRUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOMNull() As Boolean
            Return Me.IsNull(Me.tableAdm.NOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOMNull()
            Me(Me.tableAdm.NOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRENOMNull() As Boolean
            Return Me.IsNull(Me.tableAdm.PRENOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRENOMNull()
            Me(Me.tableAdm.PRENOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDATE_NAISNull() As Boolean
            Return Me.IsNull(Me.tableAdm.DATE_NAISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDATE_NAISNull()
            Me(Me.tableAdm.DATE_NAISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRESIDENCENull() As Boolean
            Return Me.IsNull(Me.tableAdm.RESIDENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRESIDENCENull()
            Me(Me.tableAdm.RESIDENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSIT_FAMNull() As Boolean
            Return Me.IsNull(Me.tableAdm.SIT_FAMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSIT_FAMNull()
            Me(Me.tableAdm.SIT_FAMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNB_ENFNull() As Boolean
            Return Me.IsNull(Me.tableAdm.NB_ENFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNB_ENFNull()
            Me(Me.tableAdm.NB_ENFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFONCT_ORGNull() As Boolean
            Return Me.IsNull(Me.tableAdm.FONCT_ORGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFONCT_ORGNull()
            Me(Me.tableAdm.FONCT_ORGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFONCT_REELNull() As Boolean
            Return Me.IsNull(Me.tableAdm.FONCT_REELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFONCT_REELNull()
            Me(Me.tableAdm.FONCT_REELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsECHELLENull() As Boolean
            Return Me.IsNull(Me.tableAdm.ECHELLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetECHELLENull()
            Me(Me.tableAdm.ECHELLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRODNull() As Boolean
            Return Me.IsNull(Me.tableAdm.PRODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRODNull()
            Me(Me.tableAdm.PRODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEXPSOMIZNull() As Boolean
            Return Me.IsNull(Me.tableAdm.EXPSOMIZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEXPSOMIZNull()
            Me(Me.tableAdm.EXPSOMIZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDATE_ENTNull() As Boolean
            Return Me.IsNull(Me.tableAdm.DATE_ENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDATE_ENTNull()
            Me(Me.tableAdm.DATE_ENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDATE_DEMONull() As Boolean
            Return Me.IsNull(Me.tableAdm.DATE_DEMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDATE_DEMONull()
            Me(Me.tableAdm.DATE_DEMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNUM_CONTNull() As Boolean
            Return Me.IsNull(Me.tableAdm.NUM_CONTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNUM_CONTNull()
            Me(Me.tableAdm.NUM_CONTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOBSERVNull() As Boolean
            Return Me.IsNull(Me.tableAdm.OBSERVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOBSERVNull()
            Me(Me.tableAdm.OBSERVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_STRUCTURENull() As Boolean
            Return Me.IsNull(Me.tableAdm.STRUCTUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_STRUCTURENull()
            Me(Me.tableAdm.STRUCTUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsST_AFFECTNull() As Boolean
            Return Me.IsNull(Me.tableAdm.ST_AFFECTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetST_AFFECTNull()
            Me(Me.tableAdm.ST_AFFECTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDATE_FCHANNull() As Boolean
            Return Me.IsNull(Me.tableAdm.DATE_FCHANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDATE_FCHANNull()
            Me(Me.tableAdm.DATE_FCHANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsORGANIQUENull() As Boolean
            Return Me.IsNull(Me.tableAdm.ORGANIQUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetORGANIQUENull()
            Me(Me.tableAdm.ORGANIQUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADRESSENull() As Boolean
            Return Me.IsNull(Me.tableAdm.ADRESSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADRESSENull()
            Me(Me.tableAdm.ADRESSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEXPSECTEURNull() As Boolean
            Return Me.IsNull(Me.tableAdm.EXPSECTEURColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEXPSECTEURNull()
            Me(Me.tableAdm.EXPSECTEURColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEXPHORSECTNull() As Boolean
            Return Me.IsNull(Me.tableAdm.EXPHORSECTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEXPHORSECTNull()
            Me(Me.tableAdm.EXPHORSECTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOM_J_FNull() As Boolean
            Return Me.IsNull(Me.tableAdm.NOM_J_FColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOM_J_FNull()
            Me(Me.tableAdm.NOM_J_FColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSIT_Serv_NationalNull() As Boolean
            Return Me.IsNull(Me.tableAdm.SIT_Serv_NationalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSIT_Serv_NationalNull()
            Me(Me.tableAdm.SIT_Serv_NationalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRENOM_PERENull() As Boolean
            Return Me.IsNull(Me.tableAdm.PRENOM_PEREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRENOM_PERENull()
            Me(Me.tableAdm.PRENOM_PEREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOM_MERENull() As Boolean
            Return Me.IsNull(Me.tableAdm.NOM_MEREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOM_MERENull()
            Me(Me.tableAdm.NOM_MEREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRENOM_MERENull() As Boolean
            Return Me.IsNull(Me.tableAdm.PRENOM_MEREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRENOM_MERENull()
            Me(Me.tableAdm.PRENOM_MEREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNIVEAU_SCOLAIRENull() As Boolean
            Return Me.IsNull(Me.tableAdm.NIVEAU_SCOLAIREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNIVEAU_SCOLAIRENull()
            Me(Me.tableAdm.NIVEAU_SCOLAIREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNUM_CNINull() As Boolean
            Return Me.IsNull(Me.tableAdm.NUM_CNIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNUM_CNINull()
            Me(Me.tableAdm.NUM_CNIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDAT_DELIVRENull() As Boolean
            Return Me.IsNull(Me.tableAdm.DAT_DELIVREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDAT_DELIVRENull()
            Me(Me.tableAdm.DAT_DELIVREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCode_BanqueNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Code_BanqueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCode_BanqueNull()
            Me(Me.tableAdm.Code_BanqueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_CompteNull() As Boolean
            Return Me.IsNull(Me.tableAdm.N_CompteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_CompteNull()
            Me(Me.tableAdm.N_CompteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCode_FonctionNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Code_FonctionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCode_FonctionNull()
            Me(Me.tableAdm.Code_FonctionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNum_TelNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Num_TelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNum_TelNull()
            Me(Me.tableAdm.Num_TelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNationaliteNull() As Boolean
            Return Me.IsNull(Me.tableAdm.NationaliteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNationaliteNull()
            Me(Me.tableAdm.NationaliteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSexeNull() As Boolean
            Return Me.IsNull(Me.tableAdm.SexeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSexeNull()
            Me(Me.tableAdm.SexeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsValidation_recrutNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Validation_recrutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetValidation_recrutNull()
            Me(Me.tableAdm.Validation_recrutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsValidation_AdmNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Validation_AdmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetValidation_AdmNull()
            Me(Me.tableAdm.Validation_AdmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCatNull() As Boolean
            Return Me.IsNull(Me.tableAdm.CatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCatNull()
            Me(Me.tableAdm.CatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPhotoNull() As Boolean
            Return Me.IsNull(Me.tableAdm.PhotoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPhotoNull()
            Me(Me.tableAdm.PhotoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCommuneNull() As Boolean
            Return Me.IsNull(Me.tableAdm.CommuneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCommuneNull()
            Me(Me.tableAdm.CommuneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWilayaNull() As Boolean
            Return Me.IsNull(Me.tableAdm.WilayaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWilayaNull()
            Me(Me.tableAdm.WilayaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLieu_naissanceNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Lieu_naissanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLieu_naissanceNull()
            Me(Me.tableAdm.Lieu_naissanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDairaNull() As Boolean
            Return Me.IsNull(Me.tableAdm.DairaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDairaNull()
            Me(Me.tableAdm.DairaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_N__SSNull() As Boolean
            Return Me.IsNull(Me.tableAdm._N__SSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_N__SSNull()
            Me(Me.tableAdm._N__SSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_N__OSNull() As Boolean
            Return Me.IsNull(Me.tableAdm._N__OSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_N__OSNull()
            Me(Me.tableAdm._N__OSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGroupe_SanguinNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Groupe_SanguinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGroupe_SanguinNull()
            Me(Me.tableAdm.Groupe_SanguinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCaisseSSNull() As Boolean
            Return Me.IsNull(Me.tableAdm.CaisseSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCaisseSSNull()
            Me(Me.tableAdm.CaisseSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsActifNull() As Boolean
            Return Me.IsNull(Me.tableAdm.ActifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetActifNull()
            Me(Me.tableAdm.ActifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStructure_PointageNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Structure_PointageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStructure_PointageNull()
            Me(Me.tableAdm.Structure_PointageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUser_Valid_RecNull() As Boolean
            Return Me.IsNull(Me.tableAdm.User_Valid_RecColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUser_Valid_RecNull()
            Me(Me.tableAdm.User_Valid_RecColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDate_Valid_RecNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Date_Valid_RecColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDate_Valid_RecNull()
            Me(Me.tableAdm.Date_Valid_RecColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUser_Valid_AdmNull() As Boolean
            Return Me.IsNull(Me.tableAdm.User_Valid_AdmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUser_Valid_AdmNull()
            Me(Me.tableAdm.User_Valid_AdmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDate_Valid_AdmNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Date_Valid_AdmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDate_Valid_AdmNull()
            Me(Me.tableAdm.Date_Valid_AdmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsValideur_RecNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Valideur_RecColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetValideur_RecNull()
            Me(Me.tableAdm.Valideur_RecColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDate_Devalid_RecNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Date_Devalid_RecColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDate_Devalid_RecNull()
            Me(Me.tableAdm.Date_Devalid_RecColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsValideur_AdmNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Valideur_AdmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetValideur_AdmNull()
            Me(Me.tableAdm.Valideur_AdmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDate_Devalid_AdmNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Date_Devalid_AdmColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDate_Devalid_AdmNull()
            Me(Me.tableAdm.Date_Devalid_AdmColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFONCT_REEL_AncNull() As Boolean
            Return Me.IsNull(Me.tableAdm.FONCT_REEL_AncColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFONCT_REEL_AncNull()
            Me(Me.tableAdm.FONCT_REEL_AncColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsECHELLE_AncNull() As Boolean
            Return Me.IsNull(Me.tableAdm.ECHELLE_AncColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetECHELLE_AncNull()
            Me(Me.tableAdm.ECHELLE_AncColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCode_Fonction_AncNull() As Boolean
            Return Me.IsNull(Me.tableAdm.Code_Fonction_AncColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCode_Fonction_AncNull()
            Me(Me.tableAdm.Code_Fonction_AncColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsModifieNull() As Boolean
            Return Me.IsNull(Me.tableAdm.ModifieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetModifieNull()
            Me(Me.tableAdm.ModifieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODE_STRUC_ANCNull() As Boolean
            Return Me.IsNull(Me.tableAdm.CODE_STRUC_ANCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODE_STRUC_ANCNull()
            Me(Me.tableAdm.CODE_STRUC_ANCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSTRUCTURE_ANCNull() As Boolean
            Return Me.IsNull(Me.tableAdm.STRUCTURE_ANCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSTRUCTURE_ANCNull()
            Me(Me.tableAdm.STRUCTURE_ANCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsModifie1Null() As Boolean
            Return Me.IsNull(Me.tableAdm.Modifie1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetModifie1Null()
            Me(Me.tableAdm.Modifie1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsECHELONNull() As Boolean
            Return Me.IsNull(Me.tableAdm.ECHELONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetECHELONNull()
            Me(Me.tableAdm.ECHELONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOTE_PRINull() As Boolean
            Return Me.IsNull(Me.tableAdm.NOTE_PRIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOTE_PRINull()
            Me(Me.tableAdm.NOTE_PRIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOTE_PRCNull() As Boolean
            Return Me.IsNull(Me.tableAdm.NOTE_PRCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOTE_PRCNull()
            Me(Me.tableAdm.NOTE_PRCColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class AdmRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AdmRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As AdmRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As AdmRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace RHDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AdmTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Adm"
            tableMapping.ColumnMappings.Add("MATRICULE", "MATRICULE")
            tableMapping.ColumnMappings.Add("CODE_STRUC", "CODE_STRUC")
            tableMapping.ColumnMappings.Add("NOM", "NOM")
            tableMapping.ColumnMappings.Add("PRENOM", "PRENOM")
            tableMapping.ColumnMappings.Add("DATE_NAIS", "DATE_NAIS")
            tableMapping.ColumnMappings.Add("RESIDENCE", "RESIDENCE")
            tableMapping.ColumnMappings.Add("SIT_FAM", "SIT_FAM")
            tableMapping.ColumnMappings.Add("NB_ENF", "NB_ENF")
            tableMapping.ColumnMappings.Add("FONCT_ORG", "FONCT_ORG")
            tableMapping.ColumnMappings.Add("FONCT_REEL", "FONCT_REEL")
            tableMapping.ColumnMappings.Add("ECHELLE", "ECHELLE")
            tableMapping.ColumnMappings.Add("PROD", "PROD")
            tableMapping.ColumnMappings.Add("EXPSOMIZ", "EXPSOMIZ")
            tableMapping.ColumnMappings.Add("DATE_ENT", "DATE_ENT")
            tableMapping.ColumnMappings.Add("DATE_DEMO", "DATE_DEMO")
            tableMapping.ColumnMappings.Add("NUM_CONT", "NUM_CONT")
            tableMapping.ColumnMappings.Add("OBSERV", "OBSERV")
            tableMapping.ColumnMappings.Add("STRUCTURE", "STRUCTURE")
            tableMapping.ColumnMappings.Add("ST_AFFECT", "ST_AFFECT")
            tableMapping.ColumnMappings.Add("DATE_FCHAN", "DATE_FCHAN")
            tableMapping.ColumnMappings.Add("ORGANIQUE", "ORGANIQUE")
            tableMapping.ColumnMappings.Add("ADRESSE", "ADRESSE")
            tableMapping.ColumnMappings.Add("EXPSECTEUR", "EXPSECTEUR")
            tableMapping.ColumnMappings.Add("EXPHORSECT", "EXPHORSECT")
            tableMapping.ColumnMappings.Add("NOM_J_F", "NOM_J_F")
            tableMapping.ColumnMappings.Add("SIT_Serv_National", "SIT_Serv_National")
            tableMapping.ColumnMappings.Add("PRENOM_PERE", "PRENOM_PERE")
            tableMapping.ColumnMappings.Add("NOM_MERE", "NOM_MERE")
            tableMapping.ColumnMappings.Add("PRENOM_MERE", "PRENOM_MERE")
            tableMapping.ColumnMappings.Add("NIVEAU SCOLAIRE", "NIVEAU SCOLAIRE")
            tableMapping.ColumnMappings.Add("NUM_CNI", "NUM_CNI")
            tableMapping.ColumnMappings.Add("DAT_DELIVRE", "DAT_DELIVRE")
            tableMapping.ColumnMappings.Add("Code Banque", "Code Banque")
            tableMapping.ColumnMappings.Add("N Compte", "N Compte")
            tableMapping.ColumnMappings.Add("Salaire Unique", "Salaire Unique")
            tableMapping.ColumnMappings.Add("Code Fonction", "Code Fonction")
            tableMapping.ColumnMappings.Add("Num Tel", "Num Tel")
            tableMapping.ColumnMappings.Add("Nationalite", "Nationalite")
            tableMapping.ColumnMappings.Add("Sexe", "Sexe")
            tableMapping.ColumnMappings.Add("Validation recrut", "Validation recrut")
            tableMapping.ColumnMappings.Add("Validation Adm", "Validation Adm")
            tableMapping.ColumnMappings.Add("Cat", "Cat")
            tableMapping.ColumnMappings.Add("Photo", "Photo")
            tableMapping.ColumnMappings.Add("Commune", "Commune")
            tableMapping.ColumnMappings.Add("Wilaya", "Wilaya")
            tableMapping.ColumnMappings.Add("Lieu naissance", "Lieu naissance")
            tableMapping.ColumnMappings.Add("Daira", "Daira")
            tableMapping.ColumnMappings.Add("N° SS", "N° SS")
            tableMapping.ColumnMappings.Add("N° OS", "N° OS")
            tableMapping.ColumnMappings.Add("Groupe_Sanguin", "Groupe_Sanguin")
            tableMapping.ColumnMappings.Add("CaisseSS", "CaisseSS")
            tableMapping.ColumnMappings.Add("Actif", "Actif")
            tableMapping.ColumnMappings.Add("Pointage_Direction", "Pointage_Direction")
            tableMapping.ColumnMappings.Add("Structure_Pointage", "Structure_Pointage")
            tableMapping.ColumnMappings.Add("Travail_Poste", "Travail_Poste")
            tableMapping.ColumnMappings.Add("User_Valid_Rec", "User_Valid_Rec")
            tableMapping.ColumnMappings.Add("Date_Valid_Rec", "Date_Valid_Rec")
            tableMapping.ColumnMappings.Add("User_Valid_Adm", "User_Valid_Adm")
            tableMapping.ColumnMappings.Add("Date_Valid_Adm", "Date_Valid_Adm")
            tableMapping.ColumnMappings.Add("Valideur_Rec", "Valideur_Rec")
            tableMapping.ColumnMappings.Add("Date_Devalid_Rec", "Date_Devalid_Rec")
            tableMapping.ColumnMappings.Add("Valideur_Adm", "Valideur_Adm")
            tableMapping.ColumnMappings.Add("Date_Devalid_Adm", "Date_Devalid_Adm")
            tableMapping.ColumnMappings.Add("FONCT_REEL_Anc", "FONCT_REEL_Anc")
            tableMapping.ColumnMappings.Add("ECHELLE_Anc", "ECHELLE_Anc")
            tableMapping.ColumnMappings.Add("Code Fonction_Anc", "Code Fonction_Anc")
            tableMapping.ColumnMappings.Add("Modifie", "Modifie")
            tableMapping.ColumnMappings.Add("CODE_STRUC_ANC", "CODE_STRUC_ANC")
            tableMapping.ColumnMappings.Add("STRUCTURE_ANC", "STRUCTURE_ANC")
            tableMapping.ColumnMappings.Add("Modifie1", "Modifie1")
            tableMapping.ColumnMappings.Add("ECHELON", "ECHELON")
            tableMapping.ColumnMappings.Add("NOTE_PRI", "NOTE_PRI")
            tableMapping.ColumnMappings.Add("NOTE_PRC", "NOTE_PRC")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Recrut].[Adm] ([MATRICULE], [CODE_STRUC], [NOM], [PRENOM], [DATE_NAI"& _ 
                "S], [RESIDENCE], [SIT_FAM], [NB_ENF], [FONCT_ORG], [FONCT_REEL], [ECHELLE], [PRO"& _ 
                "D], [EXPSOMIZ], [DATE_ENT], [DATE_DEMO], [NUM_CONT], [OBSERV], [STRUCTURE], [ST_"& _ 
                "AFFECT], [DATE_FCHAN], [ORGANIQUE], [ADRESSE], [EXPSECTEUR], [EXPHORSECT], [NOM_"& _ 
                "J_F], [SIT_Serv_National], [PRENOM_PERE], [NOM_MERE], [PRENOM_MERE], [NIVEAU SCO"& _ 
                "LAIRE], [NUM_CNI], [DAT_DELIVRE], [Code Banque], [N Compte], [Salaire Unique], ["& _ 
                "Code Fonction], [Num Tel], [Nationalite], [Sexe], [Validation recrut], [Validati"& _ 
                "on Adm], [Cat], [Photo], [Commune], [Wilaya], [Lieu naissance], [Daira], [N° SS]"& _ 
                ", [N° OS], [Groupe_Sanguin], [CaisseSS], [Actif], [Pointage_Direction], [Structu"& _ 
                "re_Pointage], [Travail_Poste], [User_Valid_Rec], [Date_Valid_Rec], [User_Valid_A"& _ 
                "dm], [Date_Valid_Adm], [Valideur_Rec], [Date_Devalid_Rec], [Valideur_Adm], [Date"& _ 
                "_Devalid_Adm], [FONCT_REEL_Anc], [ECHELLE_Anc], [Code Fonction_Anc], [Modifie], "& _ 
                "[CODE_STRUC_ANC], [STRUCTURE_ANC], [Modifie1], [ECHELON], [NOTE_PRI], [NOTE_PRC]"& _ 
                ") VALUES (@MATRICULE, @CODE_STRUC, @NOM, @PRENOM, @DATE_NAIS, @RESIDENCE, @SIT_F"& _ 
                "AM, @NB_ENF, @FONCT_ORG, @FONCT_REEL, @ECHELLE, @PROD, @EXPSOMIZ, @DATE_ENT, @DA"& _ 
                "TE_DEMO, @NUM_CONT, @OBSERV, @STRUCTURE, @ST_AFFECT, @DATE_FCHAN, @ORGANIQUE, @A"& _ 
                "DRESSE, @EXPSECTEUR, @EXPHORSECT, @NOM_J_F, @SIT_Serv_National, @PRENOM_PERE, @N"& _ 
                "OM_MERE, @PRENOM_MERE, @NIVEAU_SCOLAIRE, @NUM_CNI, @DAT_DELIVRE, @Code_Banque, @"& _ 
                "N_Compte, @Salaire_Unique, @Code_Fonction, @Num_Tel, @Nationalite, @Sexe, @Valid"& _ 
                "ation_recrut, @Validation_Adm, @Cat, @Photo, @Commune, @Wilaya, @Lieu_naissance,"& _ 
                " @Daira, @p1, @p4, @Groupe_Sanguin, @CaisseSS, @Actif, @Pointage_Direction, @Str"& _ 
                "ucture_Pointage, @Travail_Poste, @User_Valid_Rec, @Date_Valid_Rec, @User_Valid_A"& _ 
                "dm, @Date_Valid_Adm, @Valideur_Rec, @Date_Devalid_Rec, @Valideur_Adm, @Date_Deva"& _ 
                "lid_Adm, @FONCT_REEL_Anc, @ECHELLE_Anc, @Code_Fonction_Anc, @Modifie, @CODE_STRU"& _ 
                "C_ANC, @STRUCTURE_ANC, @Modifie1, @ECHELON, @NOTE_PRI, @NOTE_PRC)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MATRICULE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MATRICULE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODE_STRUC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODE_STRUC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRENOM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRENOM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_NAIS", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_NAIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RESIDENCE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RESIDENCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIT_FAM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIT_FAM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NB_ENF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NB_ENF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FONCT_ORG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FONCT_ORG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FONCT_REEL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FONCT_REEL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ECHELLE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ECHELLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXPSOMIZ", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXPSOMIZ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_ENT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_ENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_DEMO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_DEMO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUM_CONT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUM_CONT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERV", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STRUCTURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STRUCTURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ST_AFFECT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ST_AFFECT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_FCHAN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_FCHAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORGANIQUE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORGANIQUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADRESSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADRESSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXPSECTEUR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXPSECTEUR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXPHORSECT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXPHORSECT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOM_J_F", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOM_J_F", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIT_Serv_National", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIT_Serv_National", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRENOM_PERE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRENOM_PERE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOM_MERE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOM_MERE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRENOM_MERE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRENOM_MERE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVEAU_SCOLAIRE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVEAU SCOLAIRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUM_CNI", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUM_CNI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAT_DELIVRE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAT_DELIVRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_Banque", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code Banque", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Compte", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N Compte", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Salaire_Unique", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Salaire Unique", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_Fonction", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code Fonction", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Num_Tel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Num Tel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nationalite", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nationalite", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sexe", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sexe", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Validation_recrut", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Validation recrut", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Validation_Adm", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Validation Adm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cat", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Cat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Photo", Global.System.Data.SqlDbType.VarBinary, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Photo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Commune", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Commune", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Wilaya", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Wilaya", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Lieu_naissance", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Lieu naissance", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Daira", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Daira", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N° SS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N° OS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Groupe_Sanguin", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Groupe_Sanguin", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaisseSS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaisseSS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Actif", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Actif", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pointage_Direction", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pointage_Direction", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Structure_Pointage", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Structure_Pointage", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Travail_Poste", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Travail_Poste", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@User_Valid_Rec", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "User_Valid_Rec", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Valid_Rec", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Valid_Rec", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@User_Valid_Adm", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "User_Valid_Adm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Valid_Adm", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Valid_Adm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Valideur_Rec", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Valideur_Rec", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Devalid_Rec", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Devalid_Rec", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Valideur_Adm", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Valideur_Adm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Devalid_Adm", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Devalid_Adm", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FONCT_REEL_Anc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FONCT_REEL_Anc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ECHELLE_Anc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ECHELLE_Anc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_Fonction_Anc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code Fonction_Anc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Modifie", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Modifie", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODE_STRUC_ANC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODE_STRUC_ANC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STRUCTURE_ANC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STRUCTURE_ANC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Modifie1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Modifie1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ECHELON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ECHELON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOTE_PRI", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "NOTE_PRI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOTE_PRC", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "NOTE_PRC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.RH.My.MySettings.Default.RHConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT MATRICULE, CODE_STRUC, NOM, PRENOM, DATE_NAIS, RESIDENCE, SIT_FAM, NB_ENF,"& _ 
                " FONCT_ORG, FONCT_REEL, ECHELLE, PROD, EXPSOMIZ, DATE_ENT, DATE_DEMO, NUM_CONT, "& _ 
                "OBSERV, STRUCTURE, ST_AFFECT, DATE_FCHAN, ORGANIQUE, ADRESSE, EXPSECTEUR, EXPHOR"& _ 
                "SECT, NOM_J_F, SIT_Serv_National, PRENOM_PERE, NOM_MERE, PRENOM_MERE, [NIVEAU SC"& _ 
                "OLAIRE], NUM_CNI, DAT_DELIVRE, [Code Banque], [N Compte], [Salaire Unique], [Cod"& _ 
                "e Fonction], [Num Tel], Nationalite, Sexe, [Validation recrut], [Validation Adm]"& _ 
                ", Cat, Photo, Commune, Wilaya, [Lieu naissance], Daira, [N° SS], [N° OS], Groupe"& _ 
                "_Sanguin, CaisseSS, Actif, Pointage_Direction, Structure_Pointage, Travail_Poste"& _ 
                ", User_Valid_Rec, Date_Valid_Rec, User_Valid_Adm, Date_Valid_Adm, Valideur_Rec, "& _ 
                "Date_Devalid_Rec, Valideur_Adm, Date_Devalid_Adm, FONCT_REEL_Anc, ECHELLE_Anc, ["& _ 
                "Code Fonction_Anc], Modifie, CODE_STRUC_ANC, STRUCTURE_ANC, Modifie1, ECHELON, N"& _ 
                "OTE_PRI, NOTE_PRC FROM Recrut.Adm"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As RHDataSet.AdmDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As RHDataSet.AdmDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As RHDataSet.AdmDataTable = New RHDataSet.AdmDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As RHDataSet.AdmDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As RHDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Adm")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal MATRICULE As String,  _
                    ByVal CODE_STRUC As String,  _
                    ByVal NOM As String,  _
                    ByVal PRENOM As String,  _
                    ByVal DATE_NAIS As Global.System.Nullable(Of Date),  _
                    ByVal RESIDENCE As String,  _
                    ByVal SIT_FAM As String,  _
                    ByVal NB_ENF As Global.System.Nullable(Of Integer),  _
                    ByVal FONCT_ORG As String,  _
                    ByVal FONCT_REEL As String,  _
                    ByVal ECHELLE As String,  _
                    ByVal PROD As Global.System.Nullable(Of Integer),  _
                    ByVal EXPSOMIZ As Global.System.Nullable(Of Integer),  _
                    ByVal DATE_ENT As Global.System.Nullable(Of Date),  _
                    ByVal DATE_DEMO As Global.System.Nullable(Of Date),  _
                    ByVal NUM_CONT As String,  _
                    ByVal OBSERV As String,  _
                    ByVal _STRUCTURE As String,  _
                    ByVal ST_AFFECT As String,  _
                    ByVal DATE_FCHAN As Global.System.Nullable(Of Date),  _
                    ByVal ORGANIQUE As String,  _
                    ByVal ADRESSE As String,  _
                    ByVal EXPSECTEUR As Global.System.Nullable(Of Integer),  _
                    ByVal EXPHORSECT As Global.System.Nullable(Of Integer),  _
                    ByVal NOM_J_F As String,  _
                    ByVal SIT_Serv_National As String,  _
                    ByVal PRENOM_PERE As String,  _
                    ByVal NOM_MERE As String,  _
                    ByVal PRENOM_MERE As String,  _
                    ByVal NIVEAU_SCOLAIRE As String,  _
                    ByVal NUM_CNI As String,  _
                    ByVal DAT_DELIVRE As Global.System.Nullable(Of Date),  _
                    ByVal Code_Banque As String,  _
                    ByVal N_Compte As String,  _
                    ByVal Salaire_Unique As Boolean,  _
                    ByVal Code_Fonction As String,  _
                    ByVal Num_Tel As String,  _
                    ByVal Nationalite As String,  _
                    ByVal Sexe As String,  _
                    ByVal Validation_recrut As Global.System.Nullable(Of Boolean),  _
                    ByVal Validation_Adm As Global.System.Nullable(Of Boolean),  _
                    ByVal Cat As String,  _
                    ByVal Photo() As Byte,  _
                    ByVal Commune As String,  _
                    ByVal Wilaya As String,  _
                    ByVal Lieu_naissance As String,  _
                    ByVal Daira As String,  _
                    ByVal p1 As String,  _
                    ByVal p4 As String,  _
                    ByVal Groupe_Sanguin As String,  _
                    ByVal CaisseSS As String,  _
                    ByVal Actif As String,  _
                    ByVal Pointage_Direction As Boolean,  _
                    ByVal Structure_Pointage As String,  _
                    ByVal Travail_Poste As Boolean,  _
                    ByVal User_Valid_Rec As String,  _
                    ByVal Date_Valid_Rec As Global.System.Nullable(Of Date),  _
                    ByVal User_Valid_Adm As String,  _
                    ByVal Date_Valid_Adm As Global.System.Nullable(Of Date),  _
                    ByVal Valideur_Rec As String,  _
                    ByVal Date_Devalid_Rec As Global.System.Nullable(Of Date),  _
                    ByVal Valideur_Adm As String,  _
                    ByVal Date_Devalid_Adm As Global.System.Nullable(Of Date),  _
                    ByVal FONCT_REEL_Anc As String,  _
                    ByVal ECHELLE_Anc As String,  _
                    ByVal Code_Fonction_Anc As String,  _
                    ByVal Modifie As String,  _
                    ByVal CODE_STRUC_ANC As String,  _
                    ByVal STRUCTURE_ANC As String,  _
                    ByVal Modifie1 As String,  _
                    ByVal ECHELON As Global.System.Nullable(Of Integer),  _
                    ByVal NOTE_PRI As Global.System.Nullable(Of Decimal),  _
                    ByVal NOTE_PRC As Global.System.Nullable(Of Decimal)) As Integer
            If (MATRICULE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MATRICULE")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(MATRICULE,String)
            End If
            If (CODE_STRUC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODE_STRUC,String)
            End If
            If (NOM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(NOM,String)
            End If
            If (PRENOM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PRENOM,String)
            End If
            If (DATE_NAIS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DATE_NAIS.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (RESIDENCE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(RESIDENCE,String)
            End If
            If (SIT_FAM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SIT_FAM,String)
            End If
            If (NB_ENF.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(NB_ENF.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (FONCT_ORG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(FONCT_ORG,String)
            End If
            If (FONCT_REEL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(FONCT_REEL,String)
            End If
            If (ECHELLE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ECHELLE,String)
            End If
            If (PROD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(PROD.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (EXPSOMIZ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(EXPSOMIZ.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (DATE_ENT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(DATE_ENT.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (DATE_DEMO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(DATE_DEMO.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (NUM_CONT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(NUM_CONT,String)
            End If
            If (OBSERV Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(OBSERV,String)
            End If
            If (_STRUCTURE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(_STRUCTURE,String)
            End If
            If (ST_AFFECT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(ST_AFFECT,String)
            End If
            If (DATE_FCHAN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(DATE_FCHAN.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (ORGANIQUE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ORGANIQUE,String)
            End If
            If (ADRESSE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(ADRESSE,String)
            End If
            If (EXPSECTEUR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(EXPSECTEUR.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (EXPHORSECT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(EXPHORSECT.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (NOM_J_F Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(NOM_J_F,String)
            End If
            If (SIT_Serv_National Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(SIT_Serv_National,String)
            End If
            If (PRENOM_PERE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(PRENOM_PERE,String)
            End If
            If (NOM_MERE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(NOM_MERE,String)
            End If
            If (PRENOM_MERE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(PRENOM_MERE,String)
            End If
            If (NIVEAU_SCOLAIRE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(NIVEAU_SCOLAIRE,String)
            End If
            If (NUM_CNI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(NUM_CNI,String)
            End If
            If (DAT_DELIVRE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(DAT_DELIVRE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Code_Banque Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Code_Banque,String)
            End If
            If (N_Compte Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(N_Compte,String)
            End If
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(Salaire_Unique,Boolean)
            If (Code_Fonction Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Code_Fonction,String)
            End If
            If (Num_Tel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Num_Tel,String)
            End If
            If (Nationalite Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(Nationalite,String)
            End If
            If (Sexe Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(Sexe,String)
            End If
            If (Validation_recrut.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(Validation_recrut.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Validation_Adm.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(Validation_Adm.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Cat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(Cat,String)
            End If
            If (Photo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(Photo,Byte())
            End If
            If (Commune Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(Commune,String)
            End If
            If (Wilaya Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(Wilaya,String)
            End If
            If (Lieu_naissance Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(Lieu_naissance,String)
            End If
            If (Daira Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(Daira,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(p1,String)
            End If
            If (p4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(p4,String)
            End If
            If (Groupe_Sanguin Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(Groupe_Sanguin,String)
            End If
            If (CaisseSS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(CaisseSS,String)
            End If
            If (Actif Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(Actif,String)
            End If
            Me.Adapter.InsertCommand.Parameters(52).Value = CType(Pointage_Direction,Boolean)
            If (Structure_Pointage Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(Structure_Pointage,String)
            End If
            Me.Adapter.InsertCommand.Parameters(54).Value = CType(Travail_Poste,Boolean)
            If (User_Valid_Rec Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(User_Valid_Rec,String)
            End If
            If (Date_Valid_Rec.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(Date_Valid_Rec.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (User_Valid_Adm Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(User_Valid_Adm,String)
            End If
            If (Date_Valid_Adm.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(Date_Valid_Adm.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Valideur_Rec Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(Valideur_Rec,String)
            End If
            If (Date_Devalid_Rec.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(Date_Devalid_Rec.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Valideur_Adm Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(Valideur_Adm,String)
            End If
            If (Date_Devalid_Adm.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(Date_Devalid_Adm.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (FONCT_REEL_Anc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(FONCT_REEL_Anc,String)
            End If
            If (ECHELLE_Anc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(ECHELLE_Anc,String)
            End If
            If (Code_Fonction_Anc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(Code_Fonction_Anc,String)
            End If
            If (Modifie Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(Modifie,String)
            End If
            If (CODE_STRUC_ANC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(CODE_STRUC_ANC,String)
            End If
            If (STRUCTURE_ANC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(STRUCTURE_ANC,String)
            End If
            If (Modifie1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(Modifie1,String)
            End If
            If (ECHELON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(ECHELON.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (NOTE_PRI.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(NOTE_PRI.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (NOTE_PRC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(NOTE_PRC.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _admTableAdapter As AdmTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property AdmTableAdapter() As AdmTableAdapter
            Get
                Return Me._admTableAdapter
            End Get
            Set
                Me._admTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._admTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._admTableAdapter.Connection) Is Nothing)) Then
                    Return Me._admTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._admTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As RHDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._admTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Adm.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._admTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As RHDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._admTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Adm.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._admTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As RHDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._admTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Adm.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._admTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As RHDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._admTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._admTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm"& _ 
                        "e chaîne de connexion.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager ne contient pas d'informations de connexion. Définissez chaqu"& _ 
                        "e propriété TableAdapterManager TableAdapter à une instance valide de TableAdapt"& _ 
                        "er.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transaction ne peut pas commencer. La connexion de données actuelle ne prend p"& _ 
                        "as en charge les transactions ou l'état actuel n'autorise pas le début de la tra"& _ 
                        "nsaction.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._admTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._admTableAdapter, Me._admTableAdapter.Connection)
                    Me._admTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._admTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._admTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._admTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._admTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._admTableAdapter) Is Nothing) Then
                    Me._admTableAdapter.Connection = CType(revertConnections(Me._admTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._admTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
